{"version":3,"sources":["components/MenuPopUp.js","components/SideButton.js","iconComponents/SvgTwitterLogo.js","iconComponents/SvgHomeIcon.js","iconComponents/SvgProfileIcon.js","iconComponents/SvgEllipsis.js","components/UserAdmin.js","components/LeftSideBar.js","components/TweetButton.js","iconComponents/SvgTwitterReply.js","iconComponents/SvgTwitterRetweet.js","iconComponents/SvgTwitterRetweetActive.js","iconComponents/SvgTwitterLike.js","iconComponents/SvgTwitterLikeActive.js","iconComponents/SvgTwitterShare.js","components/Tweet.js","components/ComposeTweet.js","static/loader-gif.gif","components/LoadingTile.js","components/MessageTile.js","utils/removeDuplicates.js","components/MainFeedIndex.js","iconComponents/SvgBackArrow.js","components/Follows.js","components/MainFeedUser.js","components/FollowHeader.js","components/UserTile.js","utils/apendToList.js","utils/orderFollowList.js","utils/updateDatabase.js","components/MainFeedUserFollowing.js","components/MainFeedUserFollowers.js","components/MainFeedUserUpdate.js","components/MainFeedTweetExpand.js","components/ErrorTile.js","components/MainFeed.js","components/UserSideTile.js","components/WhoToFollow.js","components/Signature.js","components/RightSideBar.js","components/RegisterForm.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["MenuPopUp","props","menuVis","className","onClick","menuHandler","logOut","currentUser","handle","SideButton","clickHandler","children","text","SvgTwitterLogo","height","viewBox","id","d","SvgHomeIcon","fillRule","clipRule","fill","SvgEllipsis","cx","cy","r","UserAdmin","menu","src","photo","alt","name","iconHeight","LeftSideBar","page","fetchUser","_id","changePage","SvgProfileIcon","TweetButton","data","SvgTwitterReply","SvgTwitterLike","SvgTwitterShare","Tweet","useState","menuActive","setMenuActive","isLiked","setIsLiked","likesNumber","setLikesNumber","isRetweeted","setIsRetweeted","retweetsNumber","setRetweetsNumber","checkRetweetsList","setCheckRetweetsList","MenuBackground","Menu","tweetId","deleteTweet","useEffect","likes","includes","length","retweets","e","Array","from","document","querySelectorAll","target","fetchTweet","profilePic","time","message","replies","retweetTweet","parentTweetId","tweetHandler","likeTweet","ComposeTweet","tweetText","setTweetText","tweetSubmit","a","axios","method","url","textContent","user","placeholder","onChange","value","maxLength","type","LoadingTile","loader","MessageTile","heading","removeDuplicates","tweets","tweetsCopy","cache","filter","tweet","retweetChild","push","MainFeedIndex","setTweets","tweetPosted","setTweetPosted","fetch","response","json","fetchData","delete","then","res","newTweets","index","findIndex","splice","title","isLoaded","map","SvgTwitterRetweet","tweetAge","replies_short","retweets_short","SvgBackArrow","Follows","int","style","marginRight","refreshCurrentUser","refreshSelectedUser","number","toString","replace","MainFeedUser","userTweets","setUserTweets","selectedUserId","setSelectedUserId","isFollowingState","setIsFollowingState","setIsLoaded","followerList","setFollowerList","followerListLength","setFollowerListLength","loadTweets","selectedUser","followHandler","post","userToFollow","followerListCopy","err","console","log","unfollowHandler","userToUnfollow","indexOf","followers","editHandler","bio","following_length","FollowHeader","UserTile","status","nameClickHandler","updateArray","appendToList","arr","userFollows","followStatus","orderFollowList","sort","cur","next","rank","updateDatabase","request","MainFeedUserFollowing","followingArr","setFollowingArr","get","followingInfo","following","newFollowingArr","MainFeedUserFollowers","followersArr","setFollowersArr","followersInfo","newFollowersArr","MainFeedUserUpdate","userInfo","setUserInfo","changeHandler","userInfoCopy","saveHandler","form","FormData","append","getElementById","files","htmlFor","accept","MainFeedTweetExpand","selectedTweet","setSelectedTweet","setReplies","tweetDetails","fetchReplies","replyParent","childToParent","childTweetId","curUserRetweets","retweet","userDetails","dateAdded","patch","ErrorTile","MainFeed","UserSideTile","WhoToFollow","usersToFollow","setUsersToFollow","getNotFollowing","usersToFollowCopy","whoToFollow","Signature","rel","href","RightSideBar","RegisterForm","input","setInput","email","password","passwordConfirm","isValid","setIsValid","bioInput","setBioInput","setPage","setPhoto","inputCopy","validateDetails","nextPage","isValidCopy","isEmail","isStrongPassword","minSymbols","minUppercase","minLowercase","minNumbers","backgroundClickHandler","formActive","Object","values","every","item","preventDefault","bioInputCopy","whiteSpace","textAlign","Login","token","setToken","setFormActive","errorMessage","setErrorMessage","login","tokenHandler","catch","App","header","setHeader","isAuth","setIsAuth","setCurrentUser","setSelectedUser","curUserLikes","setCurUserLikes","setCurUserRetweets","setMenuVis","currentUserCopy","curUserLikesCopy","likedTweets","curUserRetweetsCopy","retweetedTweets","selectedUserCopy","add","retweetParent","selectedTweetCopy","dateAdded_expand","likesQty","Authorization","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.97d7045c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MenuPopUp = (props) => {\n  if (!props.menuVis) return null;\n  else {\n    return (\n      <div>\n        <div className='menu__click-area' onClick={props.menuHandler}>\n          <div className='menu'>\n            <div className='menu__item' onClick={props.logOut}>\n              Log out @{props.currentUser.handle}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default MenuPopUp;\n","import React from \"react\";\n\nconst SideButton = (props) => {\n  return (\n    <div className='leftsidebar__button' onClick={props.clickHandler}>\n      {props.children}\n      <div className={props.text == null ? \"\" : \"leftsidebar__text\"}>\n        {props.text}\n      </div>\n    </div>\n  );\n};\n\nexport default SideButton;\n","import React from \"react\";\n\nfunction SvgTwitterLogo(props) {\n  return (\n    <svg\n      height={props.height}\n      className='leftsidebar__logo'\n      viewBox='0 0 90 80' // Keep to maintain aspect ratio\n    >\n      <g id='Layer_3'>\n        <path\n          d='M3.161,66.64c12.25,0.541,17.709-1.25,24.375-6.594\n\t\tc-6.958-0.613-14.333-6.697-14.906-12.438c2.906,0.324,5.072,0.24,7.031-0.281C15.222,45.368,8.245,44.349,5.988,29.95\n\t\tc3.548,1.898,5.257,2.023,7.485,1.689c-3.646-2.582-5.807-6.836-6.813-10.332C5.46,17.134,6.286,13.39,8.37,8.765\n\t\tc10.208,12.167,23.666,17.333,35.916,18C41.349,11.671,59.13-2.892,74.067,10.858c4.875,0.031,8.969-3.625,10.906-3.656\n\t\tc-0.438,3.219-3.959,6.211-6.469,8.75c2.702,0.17,6.156-1,8.334-2.17c-0.817,3.228-5.396,6.545-7.521,8.67\n\t\tC78.251,49.663,63.04,69.968,35.691,74.214C25.208,75.841,9.886,72.733,3.161,66.64z'\n        />\n      </g>\n    </svg>\n  );\n}\nexport default SvgTwitterLogo;\n","import React from \"react\";\n\nfunction SvgHomeIcon(props) {\n  return (\n    <svg\n      // width='90px'\n      height={props.height}\n      className='leftsidebar__icon'\n      viewBox='0 0 90 80' // Keep to maintain aspect ratio\n    >\n      <g id='Layer_1'>\n        <g>\n          <g>\n            <path\n              fillRule='evenodd'\n              clipRule='evenodd'\n              fill='none'\n              d='M44.711,73.972c4.828,0,9.657,0.078,14.482-0.018\n\t\t\t\tc7.145-0.142,10.468-2.967,11.508-9.945c1.498-10.045,2.764-20.126,4.31-30.164c0.277-1.796-0.243-4.647,2.738-4.777\n\t\t\t\tc2.051-0.09,3.992-0.008,4.365-2.456c0.404-2.645-1.907-3.409-3.679-4.381c-7.254-3.978-14.927-7.337-21.702-12.004\n\t\t\t\tc-8.147-5.614-15.21-5.653-23.396-0.044c-7.071,4.845-15.039,8.384-22.604,12.51c-1.542,0.84-3.071,1.746-2.879,3.859\n\t\t\t\tc0.124,1.378,1.124,2.56,2.289,2.403c4.867-0.646,4.592,2.875,5.017,5.842c1.394,9.715,2.694,19.442,4.145,29.147\n\t\t\t\tc1.049,7.017,4.328,9.855,11.442,10.009C35.4,74.053,40.057,73.971,44.711,73.972z'\n            />\n            <path\n              fillRule='evenodd'\n              clipRule='evenodd'\n              d='M44.711,73.972c-4.655-0.001-9.312,0.081-13.964-0.019\n\t\t\t\tc-7.115-0.154-10.393-2.992-11.442-10.009c-1.451-9.705-2.751-19.432-4.145-29.147c-0.425-2.966-0.15-6.487-5.017-5.842\n\t\t\t\tc-1.165,0.157-2.165-1.025-2.289-2.403c-0.191-2.113,1.338-3.02,2.879-3.859c7.565-4.126,15.532-7.665,22.604-12.51\n\t\t\t\tc8.186-5.608,15.248-5.569,23.396,0.044c6.775,4.667,14.448,8.026,21.702,12.004c1.772,0.972,4.083,1.737,3.679,4.381\n\t\t\t\tc-0.374,2.448-2.314,2.365-4.365,2.456c-2.98,0.13-2.461,2.98-2.738,4.777c-1.545,10.037-2.812,20.118-4.31,30.164\n\t\t\t\tc-1.04,6.979-4.364,9.804-11.508,9.945C54.368,74.05,49.539,73.972,44.711,73.972z M44.989,67.397\n\t\t\t\tc4.487,0,8.98-0.171,13.454,0.05c4.155,0.205,5.905-1.714,6.418-5.633c1.471-11.275,2.999-22.544,4.744-33.779\n\t\t\t\tc0.399-2.574-0.426-3.829-2.504-4.923c-6.408-3.378-12.783-6.821-19.136-10.299c-2.005-1.098-3.862-1.121-5.874-0.019\n\t\t\t\tc-6.506,3.56-13.048,7.055-19.584,10.56c-1.672,0.898-2.503,1.995-2.183,4.13c1.754,11.757,3.343,23.539,5.012,35.309\n\t\t\t\tc0.462,3.257,2.312,4.734,5.68,4.632C35.669,67.285,40.332,67.39,44.989,67.397z'\n            />\n            <path\n              fillRule='evenodd'\n              clipRule='evenodd'\n              fill='none'\n              d='M44.989,67.393c-4.658-0.002-9.32-0.108-13.973,0.032\n\t\t\t\tc-3.369,0.103-5.218-1.375-5.68-4.632c-1.669-11.77-3.258-23.552-5.012-35.309c-0.32-2.136,0.511-3.232,2.183-4.13\n\t\t\t\tc6.536-3.505,13.078-7,19.584-10.56c2.012-1.102,3.869-1.079,5.874,0.019c6.353,3.478,12.728,6.921,19.136,10.299\n\t\t\t\tc2.078,1.095,2.903,2.349,2.504,4.923c-1.745,11.235-3.272,22.504-4.744,33.779c-0.513,3.918-2.263,5.837-6.418,5.633\n\t\t\t\tC53.969,67.226,49.476,67.397,44.989,67.393z M31.772,39.605C31.67,46.79,37.462,52.92,44.61,53.193\n\t\t\t\tc7.224,0.275,13.619-5.967,13.636-13.31c0.018-7.336-5.637-13.323-12.841-13.597C38.101,26.007,31.88,32.084,31.772,39.605z'\n            />\n            <path\n              fillRule='evenodd'\n              clipRule='evenodd'\n              d='M31.772,39.605c0.108-7.521,6.329-13.598,13.633-13.319\n\t\t\t\tc7.204,0.274,12.858,6.261,12.841,13.597c-0.018,7.343-6.412,13.585-13.636,13.31C37.462,52.92,31.67,46.79,31.772,39.605z\n\t\t\t\t M45.08,46.642c3.806-0.028,6.985-3.042,7.118-6.745c0.136-3.815-3.317-7.231-7.267-7.188c-3.722,0.039-7.024,3.201-7.123,6.82\n\t\t\t\tC37.702,43.385,41.063,46.673,45.08,46.642z'\n            />\n            <path\n              fillRule='evenodd'\n              clipRule='evenodd'\n              fill='none'\n              d='M45.08,46.642c-4.017,0.031-7.378-3.257-7.272-7.112\n\t\t\t\tc0.099-3.619,3.401-6.781,7.123-6.82c3.95-0.043,7.403,3.373,7.267,7.188C52.065,43.6,48.885,46.613,45.08,46.642z'\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\nexport default SvgHomeIcon;\n","import React from \"react\";\n\nfunction SvgHomeIcon(props) {\n  return (\n    <svg\n      // width='90px'\n      height={props.height}\n      className='leftsidebar__icon'\n      viewBox='0 0 90 80' // Keep to maintain aspect ratio\n    >\n      <g id='Layer_3'>\n        <g>\n          <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            fill='none'\n            d='M44.863,73.862c5.742,0,11.485,0,17.229-0.001\n\t\t\tc0.249,0,0.499,0.001,0.748-0.005c8.459-0.197,11.712-5.037,8.674-12.906C67.622,50.875,57.169,44.34,44.951,44.345\n\t\t\tC32.773,44.35,22.331,50.928,18.45,61.04c-2.954,7.695,0.248,12.631,8.436,12.791C32.876,73.948,38.87,73.853,44.863,73.862z'\n          />\n          <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            fill='none'\n            d='M44.904,40.306c5.686-0.022,11.074-0.817,14.278-6.329\n\t\t\tc3.927-6.754,1.495-19.613-4.547-24.521c-1.466-1.191-3.082-2.115-4.929-2.603C43.53,5.224,37.766,6.105,33.705,11.2\n\t\t\tc-5.188,6.508-6.286,14.205-3.228,21.9C32.969,39.368,38.891,40.279,44.904,40.306z'\n          />\n          <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M44.863,73.858c-5.993-0.005-11.987,0.09-17.978-0.027\n\t\t\tc-8.188-0.16-11.39-5.096-8.436-12.791c3.881-10.111,14.323-16.689,26.501-16.694c12.218-0.005,22.671,6.53,26.563,16.604\n\t\t\tc3.038,7.869-0.215,12.709-8.674,12.906c-0.249,0.006-0.499,0.005-0.748,0.005C56.349,73.862,50.605,73.862,44.863,73.858z\n\t\t\t M44.788,67.812c6.104,0,12.207,0.061,18.309-0.022c3.757-0.051,4.438-1.18,3.09-4.631c-3.114-7.965-11.214-13.098-20.79-13.174\n\t\t\tc-10.082-0.08-18.267,4.902-21.565,13.131c-1.384,3.451-0.702,4.617,3.022,4.672C32.83,67.875,38.81,67.811,44.788,67.812z'\n          />\n          <path\n            fillRule='evenodd'\n            clipRule='evenodd'\n            d='M44.898,40.306c-6.008-0.027-11.93-0.938-14.421-7.206\n\t\t\tc-3.059-7.695-1.96-15.393,3.228-21.9c4.061-5.094,9.825-5.976,16.002-4.347c1.847,0.487,3.463,1.412,4.929,2.603\n\t\t\tc6.042,4.909,8.474,17.768,4.547,24.521C55.979,39.489,50.59,40.284,44.898,40.306z M55.066,24.456\n\t\t\tc0.016-1.652-0.206-4.146-1.173-6.486c-1.521-3.683-4.351-5.798-8.297-6.051c-3.778-0.243-6.909,1.299-8.767,4.656\n\t\t\tc-2.348,4.243-2.33,8.887-1.442,13.492c0.372,1.933,1.918,3.15,3.852,3.739c2.297,0.699,4.645,0.89,7.032,0.783\n\t\t\tC53.013,34.288,55.186,32.008,55.066,24.456z'\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\nexport default SvgHomeIcon;\n","import React from \"react\";\n\nfunction SvgEllipsis(props) {\n  return (\n    <svg\n      viewBox='0 0 24 24'\n      className='btn leftsidebar__useradmin__ellipsis'\n      // width='24'\n      // height='18'\n    >\n      <g fill='#0F1419'>\n        <circle className='btn' cx='5' cy='12' r='2' fill='#0F1419'></circle>\n        <circle className='btn' cx='12' cy='12' r='2' fill='#0F1419'></circle>\n        <circle className='btn' cx='19' cy='12' r='2' fill='#0F1419'></circle>\n      </g>\n    </svg>\n  );\n}\nexport default SvgEllipsis;\n","import React from \"react\";\nimport SvgEllipsis from \"./../iconComponents/SvgEllipsis\";\n\nconst UserAdmin = (props) => {\n  return (\n    <div className='leftsidebar__container'>\n      <div className='leftsidebar__useradmin' onClick={props.menu}>\n        <img\n          className='leftsidebar__useradmin__avatar'\n          src={`img/users/${props.currentUser.photo}`}\n          alt={`${props.currentUser.name}`}\n        />\n        <div>\n          <div className='leftsidebar__useradmin__name'>\n            {props.currentUser.name}\n          </div>\n          <div className='leftsidebar__useradmin__handle'>\n            @{props.currentUser.handle}\n          </div>\n        </div>\n        <SvgEllipsis className='leftsidebar__useradmin__ellipsis' />\n      </div>\n    </div>\n  );\n};\n\nexport default UserAdmin;\n","import React from \"react\";\nimport SideButton from \"./SideButton\";\nimport SvgTwitterLogo from \"../iconComponents/SvgTwitterLogo\";\nimport SvgHomeIcon from \"../iconComponents/SvgHomeIcon\";\nimport SvgProfileIcon from \"../iconComponents/SvgProfileIcon\";\nimport UserAdmin from \"../components/UserAdmin\";\n\nconst iconHeight = \"26px\";\n\nconst LeftSideBar = (props) => {\n  const clickHandler = (page) => {\n    // If page request is '1' (currentUser profile page), then fetchUser of currentUser needs to be called.\n    if (page === 1) {\n      props.fetchUser(props.currentUser._id);\n    }\n    props.changePage(page);\n  };\n\n  return (\n    <div className='leftsidebar'>\n      <div className='leftsidebar__upper-container'>\n        <SideButton clickHandler={() => clickHandler(0)}>\n          <SvgTwitterLogo height='29px' />\n        </SideButton>\n\n        <SideButton text='Home' clickHandler={() => clickHandler(0)}>\n          <SvgHomeIcon height={iconHeight} />\n        </SideButton>\n\n        <SideButton text='Profile' clickHandler={() => clickHandler(1)}>\n          <SvgProfileIcon height={iconHeight} />\n        </SideButton>\n      </div>\n\n      <UserAdmin menu={props.menu} currentUser={props.currentUser} />\n    </div>\n  );\n};\n\nexport default LeftSideBar;\n","import React from \"react\";\n\nconst TweetButton = (props) => {\n  return (\n    <div className='btn tweet__button'>\n      <div className='btn tweet__icon-area'>{props.children}</div>\n      &nbsp;&nbsp; {props.data}\n    </div>\n  );\n};\n\nexport default TweetButton;\n","import React from \"react\";\n\nfunction SvgTwitterReply(props) {\n  return (\n    <svg\n      viewBox='0 0 24 24'\n      className='btn tweet__icon'\n      height={props.height ? props.height : \"18.75\"}\n    >\n      <g>\n        <path\n          className='btn'\n          d='M14.046 2.242l-4.148-.01h-.002c-4.374 0-7.8 3.427-7.8 7.802 0 4.098 3.186 7.206 7.465 7.37v3.828c0 .108.044.286.12.403.142.225.384.347.632.347.138 0 .277-.038.402-.118.264-.168 6.473-4.14 8.088-5.506 1.902-1.61 3.04-3.97 3.043-6.312v-.017c-.006-4.367-3.43-7.787-7.8-7.788zm3.787 12.972c-1.134.96-4.862 3.405-6.772 4.643V16.67c0-.414-.335-.75-.75-.75h-.396c-3.66 0-6.318-2.476-6.318-5.886 0-3.534 2.768-6.302 6.3-6.302l4.147.01h.002c3.532 0 6.3 2.766 6.302 6.296-.003 1.91-.942 3.844-2.514 5.176z'\n        ></path>\n      </g>\n    </svg>\n  );\n}\nexport default SvgTwitterReply;\n","import React from \"react\";\n\nfunction SvgTwitterLike(props) {\n  return (\n    <svg\n      viewBox='0 0 24 24'\n      className='btn tweet__icon'\n      height={props.height ? props.height : \"18.75\"}\n    >\n      <g>\n        <path\n          className='btn'\n          d='M23.77 15.67c-.292-.293-.767-.293-1.06 0l-2.22 2.22V7.65c0-2.068-1.683-3.75-3.75-3.75h-5.85c-.414 0-.75.336-.75.75s.336.75.75.75h5.85c1.24 0 2.25 1.01 2.25 2.25v10.24l-2.22-2.22c-.293-.293-.768-.293-1.06 0s-.294.768 0 1.06l3.5 3.5c.145.147.337.22.53.22s.383-.072.53-.22l3.5-3.5c.294-.292.294-.767 0-1.06zm-10.66 3.28H7.26c-1.24 0-2.25-1.01-2.25-2.25V6.46l2.22 2.22c.148.147.34.22.532.22s.384-.073.53-.22c.293-.293.293-.768 0-1.06l-3.5-3.5c-.293-.294-.768-.294-1.06 0l-3.5 3.5c-.294.292-.294.767 0 1.06s.767.293 1.06 0l2.22-2.22V16.7c0 2.068 1.683 3.75 3.75 3.75h5.85c.414 0 .75-.336.75-.75s-.337-.75-.75-.75z'\n        ></path>\n      </g>\n    </svg>\n  );\n}\nexport default SvgTwitterLike;\n","import React from \"react\";\n\nfunction SvgTwitterLike(props) {\n  return (\n    <svg\n      viewBox='0 0 24 24'\n      className='btn tweet__icon'\n      height={props.height ? props.height : \"18.75\"}\n    >\n      <g>\n        <path\n          className='btn'\n          d='M23.615 15.477c-.47-.47-1.23-.47-1.697 0l-1.326 1.326V7.4c0-2.178-1.772-3.95-3.95-3.95h-5.2c-.663 0-1.2.538-1.2 1.2s.537 1.2 1.2 1.2h5.2c.854 0 1.55.695 1.55 1.55v9.403l-1.326-1.326c-.47-.47-1.23-.47-1.697 0s-.47 1.23 0 1.697l3.374 3.375c.234.233.542.35.85.35s.613-.116.848-.35l3.375-3.376c.467-.47.467-1.23-.002-1.697zM12.562 18.5h-5.2c-.854 0-1.55-.695-1.55-1.55V7.547l1.326 1.326c.234.235.542.352.848.352s.614-.117.85-.352c.468-.47.468-1.23 0-1.697L5.46 3.8c-.47-.468-1.23-.468-1.697 0L.388 7.177c-.47.47-.47 1.23 0 1.697s1.23.47 1.697 0L3.41 7.547v9.403c0 2.178 1.773 3.95 3.95 3.95h5.2c.664 0 1.2-.538 1.2-1.2s-.535-1.2-1.198-1.2z'\n          fill='#17BF63'\n        ></path>\n      </g>\n    </svg>\n  );\n}\nexport default SvgTwitterLike;\n","import React from \"react\";\n\nfunction SvgTwitterLike(props) {\n  return (\n    <svg\n      viewBox='0 0 24 24'\n      className='btn tweet__icon'\n      height={props.height ? props.height : \"18.75\"}\n    >\n      <g>\n        <path\n          className='btn'\n          d='M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z'\n        ></path>\n      </g>\n    </svg>\n  );\n}\nexport default SvgTwitterLike;\n","import React from \"react\";\n\nfunction SvgTwitterLike(props) {\n  return (\n    <svg viewBox='0 0 24 24' height={props.height ? props.height : \"18.75\"}>\n      <g fill='#E0245E'>\n        <path\n          className='btn'\n          d='M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12z'\n          fill='#E0245E'\n        ></path>\n      </g>\n    </svg>\n  );\n}\nexport default SvgTwitterLike;\n","import React from \"react\";\n\nfunction SvgTwitterShare(props) {\n  return (\n    <svg\n      viewBox='0 0 24 24'\n      className='btn tweet__icon'\n      height={props.height ? props.height : \"18.75\"}\n    >\n      <g>\n        <path\n          className='btn tweet__icon'\n          d='M17.53 7.47l-5-5c-.293-.293-.768-.293-1.06 0l-5 5c-.294.293-.294.768 0 1.06s.767.294 1.06 0l3.72-3.72V15c0 .414.336.75.75.75s.75-.336.75-.75V4.81l3.72 3.72c.146.147.338.22.53.22s.384-.072.53-.22c.293-.293.293-.767 0-1.06z'\n        ></path>\n        <path\n          className='btn tweet__icon'\n          d='M19.708 21.944H4.292C3.028 21.944 2 20.916 2 19.652V14c0-.414.336-.75.75-.75s.75.336.75.75v5.652c0 .437.355.792.792.792h15.416c.437 0 .792-.355.792-.792V14c0-.414.336-.75.75-.75s.75.336.75.75v5.652c0 1.264-1.028 2.292-2.292 2.292z'\n        ></path>\n      </g>\n    </svg>\n  );\n}\nexport default SvgTwitterShare;\n","import React, { useEffect, useState } from \"react\";\nimport TweetButton from \"./TweetButton\";\nimport TwitterReply from \"./../iconComponents/SvgTwitterReply\";\nimport TwitterRetweet from \"./../iconComponents/SvgTwitterRetweet\";\nimport TwitterRetweetActive from \"./../iconComponents/SvgTwitterRetweetActive\";\nimport TwitterLike from \"./../iconComponents/SvgTwitterLike\";\nimport TwitterLikeActive from \"./../iconComponents/SvgTwitterLikeActive\";\nimport TwitterShare from \"./../iconComponents/SvgTwitterShare\";\nimport Ellipsis from \"./../iconComponents/SvgEllipsis\";\n\nconst Tweet = (props) => {\n  const [menuActive, setMenuActive] = useState(false);\n  const [isLiked, setIsLiked] = useState(false);\n  const [likesNumber, setLikesNumber] = useState(0);\n  const [isRetweeted, setIsRetweeted] = useState(false);\n  const [retweetsNumber, setRetweetsNumber] = useState(0);\n  const [checkRetweetsList, setCheckRetweetsList] = useState(false);\n\n  const deleteTweetHandler = (tweetId) => {\n    // Delete tweet from array and database\n    props.deleteTweet(tweetId);\n    // Close menu\n    menuHandler();\n  };\n\n  const menuHandler = () => {\n    if (!menuActive) setMenuActive(true);\n    else setMenuActive(false);\n  };\n\n  const MenuBackground = () => {\n    if (menuActive) {\n      return (\n        <div>\n          <div\n            className='btn btn tweet__menu__background'\n            onClick={menuHandler}\n          ></div>\n        </div>\n      );\n    } else return null;\n  };\n\n  const Menu = () => {\n    if (menuActive) {\n      return (\n        <div>\n          <div\n            className='btn tweet__menu__face'\n            onClick={() => deleteTweetHandler(props.tweetId)}\n          >\n            Delete Tweet\n          </div>\n        </div>\n      );\n    } else return null;\n  };\n\n  // Check likes list\n  useEffect(() => {\n    if (props.likes.includes(props.currentUser._id)) {\n      setIsLiked(true);\n    }\n    setLikesNumber(props.likes.length);\n  }, [props.likes, props.currentUser._id]);\n\n  const likeHandler = () => {\n    if (isLiked) {\n      setIsLiked(false);\n      setLikesNumber(likesNumber - 1);\n      props.likeTweet(props.tweetId, false);\n    } else {\n      setIsLiked(true);\n      setLikesNumber(likesNumber + 1);\n      props.likeTweet(props.tweetId, true);\n    }\n  };\n\n  // Check retweets list\n  useEffect(() => {\n    if (props.retweets.includes(props.currentUser._id)) {\n      setIsRetweeted(true);\n    } else setIsRetweeted(false);\n    setRetweetsNumber(props.retweets.length);\n    setCheckRetweetsList(false);\n  }, [props.retweets, props.currentUser._id, checkRetweetsList]);\n\n  const retweetHandler = () => {\n    if (isRetweeted) {\n      // SEND PARENT TWEET ID- NOT THE CHILD.\n      // From tweet expand... need to receive child and then convert to parent.\n      // Child to parent ID conversion happens in MainFeedExpand: \"childToParent\" function.\n      props.retweetTweet(props.parentTweetId, false);\n      props.tweetHandler();\n    } else {\n      // SEND CHILD TWEET ID\n      props.retweetTweet(props.tweetId, true);\n      props.tweetHandler();\n    }\n    setCheckRetweetsList(true);\n  };\n\n  const tweetClickHandler = (e) => {\n    const btns = Array.from(document.querySelectorAll(\".btn\"));\n\n    // If a button is clicked, the user hasn't clicked a 'name': cancel the operation.\n    if (btns.includes(e.target)) return;\n\n    props.fetchTweet(props.tweetId);\n    // console.log(\"Expand Tweet\", e.target);\n  };\n\n  return (\n    <div className='tweet' onClick={tweetClickHandler}>\n      <div className='tweet__col-1'>\n        <img\n          className='btn tweet__avatar'\n          src={`img/users/${props.profilePic}`}\n          alt={`${props.name}`}\n        />\n      </div>\n      <div className='tweet__col-2'>\n        <div className='tweet__col-2__row-1'>\n          <span\n            className='btn tweet__name'\n            onClick={() => {\n              props.fetchUser(props.id);\n              props.changePage(1);\n            }}\n          >\n            {props.name}\n          </span>\n          &nbsp;\n          <span className='tweet__handle'>{props.handle}&nbsp;·&nbsp;</span>\n          <span className='tweet__time'>{props.time}</span>\n          <MenuBackground />\n          <Menu />\n          <span className='tweet__menu' onClick={menuHandler}>\n            {props.id === props.currentUser._id ? <Ellipsis /> : null}\n          </span>\n        </div>\n        <div className='tweet__col-2__row-2'>{props.message}</div>\n        <div className='tweet__col-2__row-3'>\n          <div className='tweet__bottom-bar'>\n            <TweetButton data={props.replies.length}>\n              <TwitterReply />\n            </TweetButton>\n            <span className='tweet__retweet-btn' onClick={retweetHandler}>\n              <TweetButton data={retweetsNumber}>\n                {isRetweeted ? <TwitterRetweetActive /> : <TwitterRetweet />}\n              </TweetButton>\n            </span>\n            <span className='tweet__like-btn' onClick={likeHandler}>\n              <TweetButton data={likesNumber}>\n                {isLiked ? <TwitterLikeActive /> : <TwitterLike />}\n              </TweetButton>\n            </span>\n            <TweetButton>\n              <TwitterShare />\n            </TweetButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextareaAutosize from \"react-autosize-textarea\";\n\nconst ComposeTweet = (props) => {\n  const [tweetText, setTweetText] = useState(\"\");\n\n  const onChangeHandler = (e) => {\n    setTweetText(e.target.value);\n  };\n\n  const tweetSubmit = async () => {\n    if (!tweetText) return;\n\n    axios({\n      method: \"POST\",\n      url: \"/api/v1/tweets/\",\n      data: {\n        textContent: tweetText,\n        user: props.currentUser._id,\n      },\n    });\n\n    props.tweetHandler();\n    setTweetText(\"\");\n  };\n\n  return (\n    <div className='tweet__compose'>\n      <div className='tweet__col-1'>\n        <img\n          className='tweet__avatar'\n          src={`img/users/${props.currentUser.photo}`}\n          alt='user'\n        />\n      </div>\n      <div className='tweet__compose__col-2'>\n        <TextareaAutosize\n          className='tweet__compose__input'\n          placeholder=\"What's happening?\"\n          onChange={onChangeHandler}\n          value={tweetText}\n          maxLength='280'\n        />\n        <div className='tweet__compose__footer'>\n          <button\n            className='tweet__compose--submit'\n            type='submit'\n            onClick={tweetSubmit}\n          >\n            Tweet\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ComposeTweet;\n","export default __webpack_public_path__ + \"static/media/loader-gif.efa8b4bf.gif\";","import loader from \"./../static/loader-gif.gif\";\n\nconst LoadingTile = () => {\n  return (\n    <div className='loading-tile'>\n      <img className='loading-tile__gif' src={loader} alt='loading'></img>\n    </div>\n  );\n};\n\nexport default LoadingTile;\n","const MessageTile = (props) => {\n  return (\n    <div className='message-tile'>\n      <div className='message-tile__heading'>{props.heading}</div>\n      <div className='message-tile__message'>{props.message}</div>\n    </div>\n  );\n};\n\nexport default MessageTile;\n","const removeDuplicates = (tweets) => {\n  // Removes subsequent duplicates.\n  const tweetsCopy = [...tweets];\n\n  const cache = [];\n  const filtered = tweetsCopy.filter((tweet) => {\n    if (tweet.retweetChild && !cache.includes(tweet.retweetChild._id)) {\n      cache.push(tweet.retweetChild._id);\n      return true;\n    } else if (tweet.retweetChild && cache.includes(tweet.retweetChild._id))\n      return false;\n    else if (!tweet.retweetChild && cache.includes(tweet._id)) return false;\n    else return true;\n  });\n  return filtered;\n};\n\nexport default removeDuplicates;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Tweet from \"./../components/Tweet\";\nimport ComposeTweet from \"./../components/ComposeTweet\";\nimport LoadingTile from \"./../components/LoadingTile\";\nimport MessageTile from \"./MessageTile\";\nimport SvgTwitterRetweet from \"./../iconComponents/SvgTwitterRetweet\";\nimport removeDuplicates from \"./../utils/removeDuplicates\";\n\nconst MainFeedIndex = (props) => {\n  const [tweets, setTweets] = useState([]);\n  const [tweetPosted, setTweetPosted] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\"/tweets/\", {\n        method: \"GET\",\n      });\n      const data = await response.json();\n\n      setTweets(removeDuplicates(data.data.tweets));\n      setTweetPosted(false);\n    }\n    fetchData();\n  }, [tweetPosted]);\n\n  const tweetHandler = () => {\n    setTweetPosted(true);\n  };\n\n  const deleteTweet = (tweetId) => {\n    // Delete from database\n    axios.delete(`/api/v1/tweets/${tweetId}`).then((res) => {\n      // If delete successful..\n      // Delete from state array.\n      const newTweets = [...tweets];\n\n      let index = newTweets.findIndex((tweet) => tweet.id === tweetId);\n      newTweets.splice(index, 1);\n      setTweets(newTweets);\n    });\n  };\n\n  return (\n    <div className='mainfeed'>\n      <div className='mainfeed__header'>\n        <div className='mainfeed__header__text'>{props.title}</div>\n      </div>\n      <ComposeTweet\n        currentUser={props.currentUser}\n        tweetHandler={tweetHandler}\n      />\n      <div className='mainfeed__divider' />\n      {tweets.length === 0 ? (\n        <MessageTile\n          heading={\"Welcome to Twittr!\"}\n          message=\"This is the best place to see what's happening in your world. Find some people to follow now.\"\n        />\n      ) : null}\n      {!props.isLoaded ? (\n        <LoadingTile />\n      ) : (\n        tweets.map((tweet) => {\n          return (\n            <div\n              className='tweet__hover-wrapper'\n              key={`${tweet.retweetChild ? tweet.retweetChild._id : tweet._id}`}\n            >\n              {tweet.retweetChild ? (\n                // RETWEET\n                <div>\n                  <div className='retweet__header'>\n                    <SvgTwitterRetweet height='16' />\n                    {tweet.user.name} retweeted\n                  </div>\n                  <Tweet\n                    className='tweet'\n                    name={tweet.retweetChild.user.name}\n                    id={tweet.retweetChild.user._id}\n                    tweetId={tweet.retweetChild._id}\n                    parentTweetId={tweet._id}\n                    handle={`@${tweet.retweetChild.user.handle}`}\n                    profilePic={tweet.retweetChild.user.photo}\n                    time={tweet.retweetChild.tweetAge}\n                    message={tweet.retweetChild.textContent}\n                    replies={tweet.retweetChild.replies_short}\n                    retweets={tweet.retweetChild.retweets_short}\n                    likes={tweet.retweetChild.likes}\n                    fetchUser={props.fetchUser}\n                    changePage={props.changePage}\n                    currentUser={props.currentUser}\n                    deleteTweet={deleteTweet}\n                    likeTweet={props.likeTweet}\n                    retweetTweet={props.retweetTweet}\n                    fetchTweet={props.fetchTweet}\n                    tweetHandler={tweetHandler}\n                  />\n                </div>\n              ) : (\n                <Tweet\n                  className='tweet'\n                  name={tweet.user.name}\n                  id={tweet.user._id}\n                  tweetId={tweet._id}\n                  handle={`@${tweet.user.handle}`}\n                  profilePic={tweet.user.photo}\n                  time={tweet.tweetAge}\n                  message={tweet.textContent}\n                  replies={tweet.replies_short}\n                  retweets={tweet.retweets_short}\n                  likes={tweet.likes}\n                  fetchUser={props.fetchUser}\n                  changePage={props.changePage}\n                  currentUser={props.currentUser}\n                  deleteTweet={deleteTweet}\n                  likeTweet={props.likeTweet}\n                  retweetTweet={props.retweetTweet}\n                  fetchTweet={props.fetchTweet}\n                  tweetHandler={tweetHandler}\n                />\n              )}\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default MainFeedIndex;\n","import React from \"react\";\n\nfunction SvgBackArrow(props) {\n  return (\n    <svg\n      onClick={props.changePage}\n      viewBox='0 0 24 24'\n      className='btn--back-arrow'\n      // width='24'\n      height={props.height}\n    >\n      <g fill='#1DA1F2'>\n        <path\n          d='M20 11H7.414l4.293-4.293c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0l-6 6c-.39.39-.39 1.023 0 1.414l6 6c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L7.414 13H20c.553 0 1-.447 1-1s-.447-1-1-1z'\n          fill='#1DA1F2'\n        ></path>\n      </g>\n    </svg>\n  );\n}\nexport default SvgBackArrow;\n","const Follows = (props) => {\n  const numberFormat = (int) => {\n    let intCopy = int * 1;\n\n    return intCopy.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return (\n    <span\n      style={{ marginRight: \"1.5em\" }}\n      className='follow'\n      onClick={() => {\n        props.changePage(props.page);\n        props.refreshCurrentUser();\n        props.refreshSelectedUser();\n      }}\n    >\n      <strong>{numberFormat(props.number)}</strong>&nbsp;{props.type}\n    </span>\n  );\n};\n\nexport default Follows;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SvgBackArrow from \"./../iconComponents/SvgBackArrow\";\nimport Follows from \"./Follows\";\nimport Tweet from \"./Tweet\";\nimport SvgTwitterRetweet from \"./../iconComponents/SvgTwitterRetweet\";\nimport LoadingTile from \"./../components/LoadingTile\";\nimport removeDuplicates from \"./../utils/removeDuplicates\";\n\nconst MainFeedUser = (props) => {\n  const [userTweets, setUserTweets] = useState([]);\n  const [tweetPosted, setTweetPosted] = useState(false);\n  const [selectedUserId, setSelectedUserId] = useState(\"\");\n  const [isFollowingState, setIsFollowingState] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [followerList, setFollowerList] = useState([]);\n  const [followerListLength, setFollowerListLength] = useState(0);\n\n  // Get tweets from selected user\n  const loadTweets = () => {\n    if (!props.selectedUser._id) return;\n    async function fetchData() {\n      const response = await fetch(\n        `/api/v1/tweets/user/${props.selectedUser._id}`,\n        {\n          method: \"GET\",\n        }\n      );\n      const data = await response.json();\n      setUserTweets(removeDuplicates(data.userTweets));\n      setTweetPosted(false);\n      setIsLoaded(true);\n    }\n    fetchData();\n  };\n\n  useEffect(() => {\n    loadTweets();\n  }, [tweetPosted]);\n\n  useEffect(() => {\n    // A separate variable (selectedUserId) is required as the server crashes if not fed a string.\n\n    if (!selectedUserId) {\n      setSelectedUserId(props.selectedUser._id);\n    } else {\n      loadTweets();\n    }\n  }, [selectedUserId, props.selectedUser._id]);\n\n  const deleteTweet = (tweetId) => {\n    // Delete from database\n    axios.delete(`/api/v1/tweets/${tweetId}`).then((res) => {\n      // If delete successful..\n      // Delete from state array.\n      const newTweets = [...userTweets];\n      let index = newTweets.findIndex((tweet) => tweet.id === tweetId);\n      newTweets.splice(index, 1);\n      setUserTweets(newTweets);\n    });\n  };\n\n  const followHandler = () => {\n    if (isFollowingState) {\n      return null;\n    }\n    axios\n      .post(\"/api/v1/users/follow\", {\n        userToFollow: selectedUserId,\n      })\n      .then(\n        (res) => {\n          const followerListCopy = [...followerList];\n          followerListCopy.push(props.currentUser._id);\n          setFollowerList(followerListCopy);\n          setIsFollowingState(true);\n\n          let length = followerListLength;\n          length++;\n          setFollowerListLength(length);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n  };\n\n  const unfollowHandler = () => {\n    axios\n      .post(\"/api/v1/users/unfollow\", {\n        userToUnfollow: selectedUserId,\n      })\n      .then(\n        (res) => {\n          const followerListCopy = [...followerList];\n          let index = followerListCopy.indexOf(props.currentUser._id);\n          followerListCopy.splice(index, 1);\n          setFollowerList(followerListCopy);\n          setIsFollowingState(false);\n\n          let length = followerListLength;\n          length--;\n          setFollowerListLength(length);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n  };\n\n  useEffect(() => {\n    if (isLoaded) {\n      const followerListCopy = [...props.selectedUser.followers];\n      setFollowerListLength(followerListCopy.length);\n    }\n  }, [isLoaded]);\n\n  // Check if selected user is being followed by current user.\n  useEffect(() => {\n    if (!isLoaded) return;\n    else {\n      const followerListCopy = [...props.selectedUser.followers];\n      setFollowerList(followerListCopy);\n\n      if (followerList.includes(props.currentUser._id)) {\n        setIsFollowingState(true);\n      } else {\n        setIsFollowingState(false);\n      }\n    }\n  }, [isLoaded, isFollowingState]);\n\n  const editHandler = () => {\n    props.changePage(4);\n  };\n\n  const tweetHandler = () => {\n    setTweetPosted(true);\n    loadTweets();\n  };\n\n  const followBtn = () => {\n    if (!isLoaded) return null;\n    if (props.selectedUser._id === props.currentUser._id)\n      return (\n        <button className='btn--follow btn--edit' onClick={editHandler}>\n          Edit profile\n        </button>\n      );\n    if (isFollowingState) {\n      return <button className='btn--following' onClick={unfollowHandler} />;\n    } else {\n      return (\n        <button className='btn--follow' onClick={followHandler}>\n          Follow\n        </button>\n      );\n    }\n  };\n\n  return (\n    <div className='mainfeed'>\n      <div className='mainfeed__header'>\n        <SvgBackArrow height='22.5px' changePage={() => props.changePage(0)} />\n        <div className='mainfeed__header__col-2'>\n          <div className='mainfeed__header__text'>\n            {props.selectedUser.name}\n          </div>\n          <span className='mainfeed__user__tweets'>\n            {userTweets ? userTweets.length : \"0\"} Tweets\n          </span>\n        </div>\n      </div>\n      <div className='mainfeed__banner'>\n        <div className='mainfeed__user-avatar--wrapper'>\n          <img\n            className='mainfeed__user-avatar'\n            src={`img/users/${props.selectedUser.photo}`}\n            alt={`${props.selectedUser.name}`}\n          />\n        </div>\n      </div>\n      <div className='mainfeed__bio'>\n        <div className='mainfeed__bio__row-1'>{followBtn()}</div>\n        <div className='mainfeed__bio__row-2'>\n          <h2 className='mainfeed__user-title'>{props.selectedUser.name}</h2>\n          <p>@{props.selectedUser.handle}</p>\n        </div>\n        <div className='mainfeed__bio__row-3'>\n          <p>{props.selectedUser.bio}</p>\n        </div>\n        <div className='mainfeed__bio__row-5'>\n          <Follows\n            type='Following '\n            number={props.selectedUser.following_length}\n            page={2}\n            changePage={props.changePage}\n            refreshCurrentUser={props.refreshCurrentUser}\n            refreshSelectedUser={props.refreshSelectedUser}\n          />\n          <Follows\n            type='Followers '\n            number={followerListLength}\n            page={3}\n            changePage={props.changePage}\n            refreshCurrentUser={props.refreshCurrentUser}\n            refreshSelectedUser={props.refreshSelectedUser}\n          />\n        </div>\n        <div className='mainfeed__bio__row-7'>\n          <div className='mainfeed__bio--selected'>\n            Tweets\n            <div className='mainfeed__bio--underline' />\n          </div>\n          <div>Tweets & replies</div>\n          <div>Media</div>\n          <div>Likes</div>\n        </div>\n      </div>\n      {!isLoaded ? (\n        <LoadingTile />\n      ) : (\n        userTweets.map((tweet) => {\n          return (\n            <div\n              className='tweet__hover-wrapper'\n              key={`${tweet.retweetChild ? tweet.retweetChild._id : tweet._id}`}\n            >\n              {tweet.retweetChild ? (\n                // RETWEET\n                <div>\n                  <div className='retweet__header'>\n                    <SvgTwitterRetweet height='16' />\n                    {tweet.user.name} retweeted\n                  </div>\n                  <Tweet\n                    className='tweet'\n                    name={tweet.retweetChild.user.name}\n                    id={tweet.retweetChild.user._id}\n                    tweetId={tweet.retweetChild._id}\n                    parentTweetId={tweet._id}\n                    handle={`@${tweet.retweetChild.user.handle}`}\n                    profilePic={tweet.retweetChild.user.photo}\n                    time={tweet.retweetChild.tweetAge}\n                    message={tweet.retweetChild.textContent}\n                    replies={tweet.retweetChild.replies_short}\n                    retweets={tweet.retweetChild.retweets_short}\n                    likes={tweet.retweetChild.likes}\n                    fetchUser={props.fetchUser}\n                    changePage={props.changePage}\n                    currentUser={props.currentUser}\n                    deleteTweet={deleteTweet}\n                    likeTweet={props.likeTweet}\n                    retweetTweet={props.retweetTweet}\n                    fetchTweet={props.fetchTweet}\n                    tweetHandler={tweetHandler}\n                  />\n                </div>\n              ) : (\n                <Tweet\n                  className='tweet'\n                  name={tweet.user.name}\n                  id={tweet.user._id}\n                  tweetId={tweet._id}\n                  handle={`@${tweet.user.handle}`}\n                  profilePic={tweet.user.photo}\n                  time={tweet.tweetAge}\n                  message={tweet.textContent}\n                  replies={tweet.replies_short}\n                  retweets={tweet.retweets_short}\n                  likes={tweet.likes}\n                  fetchUser={props.fetchUser}\n                  changePage={props.changePage}\n                  currentUser={props.currentUser}\n                  deleteTweet={deleteTweet}\n                  likeTweet={props.likeTweet}\n                  retweetTweet={props.retweetTweet}\n                  fetchTweet={props.fetchTweet}\n                  tweetHandler={tweetHandler}\n                />\n              )}\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default MainFeedUser;\n","import SvgBackArrow from \"./../iconComponents/SvgBackArrow\";\n\nconst FollowHeader = (props) => {\n  return (\n    <div>\n      <div className='mainfeed__header'>\n        <SvgBackArrow\n          height='22.5px'\n          changePage={() => {\n            props.fetchUser(props.selectedUser._id);\n            props.changePage(1);\n          }}\n        />\n        <div className='mainfeed__header__col-2'>\n          <div className='mainfeed__header__text'>\n            {props.selectedUser.name}\n          </div>\n          <span className='mainfeed__user__tweets'>\n            @{props.selectedUser.handle}\n          </span>\n        </div>\n      </div>\n      {props.type === \"Following\" ? (\n        <div className='mainfeed__follow__nav'>\n          <div\n            className='mainfeed__follow__nav-btn'\n            onClick={() => props.changePage(3)}\n          >\n            Followers\n          </div>\n          <div className='mainfeed__follow__nav-btn--selected'>Following</div>\n        </div>\n      ) : (\n        <div className='mainfeed__follow__nav'>\n          <div className='mainfeed__follow__nav-btn--selected'>Followers</div>\n          <div\n            className='mainfeed__follow__nav-btn'\n            onClick={() => props.changePage(2)}\n          >\n            Following\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FollowHeader;\n","const UserTile = (props) => {\n  const status = (status) => {\n    if (status === \"current user\") return null;\n    else if (status === \"following\")\n      return (\n        <button\n          className='btn btn--following '\n          onClick={() => props.updateArray(props.user._id, \"not following\")}\n        ></button>\n      );\n    else\n      return (\n        <button\n          className='btn btn--follow'\n          onClick={() => props.updateArray(props.user._id, \"following\")}\n        >\n          Follow\n        </button>\n      );\n  };\n\n  const nameClickHandler = (e) => {\n    const btns = Array.from(document.querySelectorAll(\".btn\"));\n\n    // If a button is clicked, the user hasn't clicked a 'name': cancel the operation.\n    if (btns.includes(e.target)) return;\n\n    props.fetchUser(props.user._id);\n  };\n\n  return (\n    <div className='userPreviewTile' onClick={nameClickHandler}>\n      <div className='userPreviewTile__col-1'>\n        <img\n          className='tweet__avatar'\n          src={`img/users/${props.user.photo}`}\n          alt={`${props.user.name}`}\n        />\n      </div>\n      <div className='userPreviewTile__col-2'>\n        <div className='userPreviewTile__col-2__row-1'>\n          <div>\n            <div className='userPreviewTile__name' onClick={nameClickHandler}>\n              {props.user.name}\n            </div>\n            <div className='userPreviewTile__handle'>@{props.user.handle}</div>\n          </div>\n          {status(props.status)}\n        </div>\n        <div className='userPreviewTile__col-2__row-2'>{props.user.bio}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserTile;\n","// Attribute 1: 'arr': array of user objects.\n// Attribute 2: 'userFollows': array of IDs. CurrentUser follower IDs to check against.\n// Attribute 3: 'id': currentUser ID.\n\nconst appendToList = (arr, userFollows, id) => {\n  // Appends follow status (whether current user is following any of the users in the array)\n  let arrayNew = [...arr];\n  const appendedArr = arrayNew.map((user) => {\n    if (user._id === id) {\n      user.followStatus = \"current user\";\n    } else if (userFollows.includes(user._id)) {\n      user.followStatus = \"following\";\n    } else {\n      user.followStatus = \"not following\";\n    }\n    return user;\n  });\n  return appendedArr;\n};\n\nexport default appendToList;\n","const orderFollowList = (arr) => {\n  // Sorts array: 1) following, 2) not following, 3) current user.\n  let arrayNew = [...arr];\n  return arrayNew.sort((cur, next) => {\n    const rank = (user) => {\n      if (user.followStatus === \"current user\") return 2;\n      if (user.followStatus === \"following\") return 0;\n      else return 1;\n    };\n\n    if (rank(cur) > rank(next)) return 1;\n    if (rank(cur) < rank(next)) return -1;\n    else return 0;\n  });\n};\n\nexport default orderFollowList;\n","import axios from \"axios\";\n\nconst updateDatabase = (id, request) => {\n  if (request === \"following\") {\n    axios\n      .post(\"/api/v1/users/follow\", {\n        userToFollow: id,\n      })\n      .then(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n  } else if (request === \"not following\") {\n    axios\n      .post(\"/api/v1/users/unfollow\", {\n        userToUnfollow: id,\n      })\n      .then(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n  }\n};\n\nexport default updateDatabase;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport FollowHeader from \"./FollowHeader\";\nimport MessageTile from \"./MessageTile\";\nimport UserTile from \"./UserTile\";\nimport appendToList from \"./../utils/apendToList\";\nimport orderFollowList from \"./../utils/orderFollowList\";\nimport updateDatabase from \"./../utils/updateDatabase\";\n\nconst MainFeedUserFollowing = (props) => {\n  const [followingArr, setFollowingArr] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`/api/v1/users/${props.selectedUser._id}/following`)\n      .then((res) => {\n        setFollowingArr(\n          orderFollowList(\n            appendToList(\n              res.data.followingInfo,\n              props.currentUser.following,\n              props.currentUser._id\n            )\n          )\n        );\n        props.refreshSelectedUser();\n        props.refreshCurrentUser();\n        setIsLoaded(true);\n      });\n  }, [isLoaded]);\n\n  const updateArray = (id, request) => {\n    const newFollowingArr = [...followingArr];\n    const index = newFollowingArr.findIndex((user) => {\n      return user._id === id;\n    });\n    newFollowingArr[index].followStatus = request;\n\n    updateDatabase(id, request);\n    setFollowingArr(newFollowingArr);\n  };\n\n  return (\n    <div className='mainfeed'>\n      <FollowHeader\n        type='Following'\n        selectedUser={props.selectedUser}\n        changePage={props.changePage}\n        fetchUser={props.fetchUser}\n      />\n      <div className='mainfeed__follow-list'>\n        {props.selectedUser.following.length === 0 ? (\n          <MessageTile\n            heading={`@${props.selectedUser.handle} isn't following anyone`}\n            message=\"When they do, they'll be listed here.\"\n          />\n        ) : (\n          followingArr.map((user) => {\n            return (\n              <UserTile\n                user={user}\n                status={user.followStatus}\n                updateArray={updateArray}\n                fetchUser={props.fetchUser}\n                refreshSelectedUser={props.refreshSelectedUser}\n                key={user._id}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainFeedUserFollowing;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport FollowHeader from \"./FollowHeader\";\nimport MessageTile from \"./MessageTile\";\nimport UserTile from \"./UserTile\";\nimport appendToList from \"./../utils/apendToList\";\nimport updateDatabase from \"./../utils/updateDatabase\";\nimport orderFollowList from \"./../utils/orderFollowList\";\n\nconst MainFeedUserFollowers = (props) => {\n  const [followersArr, setFollowersArr] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`/api/v1/users/${props.selectedUser._id}/followers`)\n      .then((res) => {\n        setFollowersArr(\n          orderFollowList(\n            appendToList(\n              res.data.followersInfo,\n              props.currentUser.following,\n              props.currentUser._id\n            )\n          )\n        );\n        props.refreshSelectedUser();\n        props.refreshCurrentUser();\n        setIsLoaded(true);\n      });\n  }, [isLoaded]);\n\n  const updateArray = (id, request) => {\n    const newFollowersArr = [...followersArr];\n    const index = newFollowersArr.findIndex((user) => {\n      return user._id === id;\n    });\n    newFollowersArr[index].followStatus = request;\n\n    updateDatabase(id, request);\n    setFollowersArr(newFollowersArr);\n  };\n\n  return (\n    <div className='mainfeed'>\n      <FollowHeader\n        type='Followers'\n        selectedUser={props.selectedUser}\n        changePage={props.changePage}\n        fetchUser={props.fetchUser}\n      />\n      <div className='mainfeed__follow-list'>\n        {props.selectedUser.followers.length === 0 ? (\n          <MessageTile\n            heading={`@${props.selectedUser.handle} doesn't have any followers`}\n            message=\"When someone follows them, they'll be listed here.\"\n          />\n        ) : (\n          followersArr.map((user) => {\n            return (\n              <UserTile\n                user={user}\n                status={user.followStatus}\n                updateArray={updateArray}\n                fetchUser={props.fetchUser}\n                key={user._id}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainFeedUserFollowers;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SvgBackArrow from \"./../iconComponents/SvgBackArrow\";\n\nconst MainFeedUserUpdate = (props) => {\n  const [userInfo, setUserInfo] = useState({ name: \" \", bio: \"\" });\n\n  useEffect(() => {\n    setUserInfo({ name: props.currentUser.name, bio: props.currentUser.bio });\n  }, []);\n\n  const changeHandler = (e) => {\n    if (e.target.name === \"name\" && e.target.value.length > 35) return;\n    if (e.target.name === \"bio\" && e.target.value.length > 160) return;\n    const userInfoCopy = { ...userInfo };\n    userInfoCopy[e.target.name] = e.target.value;\n    setUserInfo(userInfoCopy);\n  };\n\n  const saveHandler = () => {\n    const form = new FormData();\n    form.append(\"name\", userInfo.name);\n    form.append(\"bio\", userInfo.bio);\n    form.append(\"photo\", document.getElementById(\"photo\").files[0]);\n\n    axios.post(\"/api/v1/users/updateUser\", form).then(\n      (res) => {\n        props.refreshCurrentUser();\n        props.refreshSelectedUser();\n        props.changePage(1);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  };\n\n  const saveBtn = () => {\n    return (\n      <button className='btn--save' onClick={saveHandler}>\n        Save\n      </button>\n    );\n  };\n\n  return (\n    <div className='mainfeed'>\n      <div className='mainfeed__header'>\n        <SvgBackArrow height='22.5px' changePage={() => props.changePage(1)} />\n        <div className='mainfeed__header__col-2'>\n          <div className='mainfeed__header__text'>{props.currentUser.name}</div>\n          {/* <span className='mainfeed__user__tweets'>\n            {userTweets ? userTweets.length : \"0\"} Tweets\n          </span> */}\n        </div>\n      </div>\n      <div className='mainfeed__banner'>\n        <div className='mainfeed__user-avatar--wrapper'>\n          <label htmlFor='photo'>\n            <img\n              className='mainfeed__user-avatar update-user__avatar'\n              src={`img/users/${props.currentUser.photo}`}\n              alt={`${props.currentUser.name}`}\n            />\n          </label>\n        </div>\n      </div>\n      <div className='mainfeed__bio'>\n        <div className='mainfeed__bio__row-1'>{saveBtn()}</div>\n        <div className='update-user__photo-upload'>\n          <input\n            className='register__upload'\n            type='file'\n            accept='image/*'\n            id='photo'\n            name='photo'\n            // style={{ display: \"none\" }}\n          />\n        </div>\n        <div className='update-user__bio__row-2'>\n          <input\n            className='update-user__name-input'\n            onChange={changeHandler}\n            name='name'\n            value={userInfo.name}\n            placeholder='Full Name'\n          />\n\n          {/* <h2 className='mainfeed__user-title'>{props.currentUser.name}</h2> */}\n          <p>@{props.currentUser.handle}</p>\n        </div>\n        <div className='mainfeed__bio__row-3'>\n          <textarea\n            className='bioInput'\n            onChange={changeHandler}\n            value={userInfo.bio}\n            id='bio'\n            name='bio'\n          />\n          <div className='update-user__bio-counter'>\n            {userInfo.bio ? userInfo.bio.length : \"0\"}/160\n          </div>\n        </div>\n        <div className='mainfeed__bio__row-5'>\n          {/* <Follows\n            type='Following '\n            number={props.selectedUser.following_length}\n            page={2}\n            changePage={props.changePage}\n            refreshCurrentUser={props.refreshCurrentUser}\n            refreshSelectedUser={props.refreshSelectedUser}\n          /> */}\n          {/* <Follows\n            type='Followers '\n            number={followerListLength}\n            page={3}\n            changePage={props.changePage}\n            refreshCurrentUser={props.refreshCurrentUser}\n            refreshSelectedUser={props.refreshSelectedUser}\n          /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainFeedUserUpdate;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport SvgBackArrow from \"./../iconComponents/SvgBackArrow\";\nimport TweetButton from \"./TweetButton\";\nimport TwitterReply from \"./../iconComponents/SvgTwitterReply\";\nimport TwitterRetweet from \"./../iconComponents/SvgTwitterRetweet\";\nimport TwitterLike from \"./../iconComponents/SvgTwitterLike\";\nimport TwitterLikeActive from \"./../iconComponents/SvgTwitterLikeActive\";\nimport TwitterShare from \"./../iconComponents/SvgTwitterShare\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport LoadingTile from \"./../components/LoadingTile\";\nimport Tweet from \"./../components/Tweet\";\nimport removeDuplicates from \"./../utils/removeDuplicates\";\nimport SvgTwitterRetweet from \"./../iconComponents/SvgTwitterRetweet\";\n\nconst MainFeedTweetExpand = (props) => {\n  const [selectedTweet, setSelectedTweet] = useState({});\n  const [tweetText, setTweetText] = useState(\"\");\n  const [replies, setReplies] = useState([]);\n  const [tweetPosted, setTweetPosted] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isLiked, setIsLiked] = useState(false);\n  const [likesNumber, setLikesNumber] = useState(0);\n\n  useEffect(() => {\n    if (selectedTweet.tweetDetails) {\n      fetchReplies();\n    }\n  }, [selectedTweet, tweetPosted]);\n\n  // Check likes list\n  useEffect(() => {\n    if (isLoaded) {\n      if (selectedTweet.tweetDetails.likes.includes(props.currentUser._id)) {\n        setIsLiked(true);\n      }\n      setLikesNumber(selectedTweet.tweetDetails.likes.length);\n    }\n  }, [selectedTweet, props.currentUser._id, isLoaded]);\n\n  const fetchReplies = () => {\n    axios({\n      method: \"GET\",\n      url: `/tweets/${selectedTweet.tweetDetails.tweetId}/replies`,\n    }).then((res) => {\n      setReplies(removeDuplicates(res.data.data.tweets));\n      setIsLoaded(true);\n      setTweetPosted(false);\n    });\n  };\n\n  useEffect(() => {\n    setSelectedTweet(props.selectedTweet);\n  }, [props.selectedTweet]);\n\n  const onChangeHandler = (e) => {\n    setTweetText(e.target.value);\n  };\n\n  const tweetSubmit = async () => {\n    if (!tweetText) return;\n\n    axios({\n      method: \"POST\",\n      url: \"/api/v1/tweets/\",\n      data: {\n        textContent: tweetText,\n        user: props.currentUser._id,\n        replyParent: selectedTweet.tweetDetails.tweetId,\n      },\n    });\n\n    tweetHandler();\n    setTweetText(\"\");\n  };\n\n  const tweetHandler = () => {\n    setTweetPosted(true);\n  };\n\n  const deleteTweet = (tweetId) => {\n    // Delete from database\n\n    axios.delete(`/api/v1/tweets/${tweetId}`).then((res) => {\n      const newTweets = [...replies];\n      let index = newTweets.findIndex((tweet) => tweet.id === tweetId);\n      newTweets.splice(index, 1);\n      setReplies(newTweets);\n    });\n  };\n\n  const likeHandler = () => {\n    if (isLiked) {\n      axios\n        .patch(`/api/v1/tweets/${selectedTweet.tweetDetails.tweetId}/unlike`)\n        .then((res) => {\n          setIsLiked(false);\n          setLikesNumber(likesNumber - 1);\n        });\n    } else {\n      axios\n        .patch(`/api/v1/tweets/${selectedTweet.tweetDetails.tweetId}/like`)\n        .then((res) => {\n          setIsLiked(true);\n          setLikesNumber(likesNumber + 1);\n        });\n    }\n  };\n\n  const childToParent = (childTweetId) => {\n    if (!props.curUserRetweets) return;\n    if (props.curUserRetweets.length === 0) return;\n    const index = props.curUserRetweets.findIndex(\n      (retweet) => retweet.retweetChild === childTweetId\n    );\n    if (index < 0) return;\n    return props.curUserRetweets[index]._id;\n  };\n\n  return (\n    <div className='mainfeed'>\n      <div className='mainfeed__header'>\n        <SvgBackArrow height='22.5px' changePage={() => props.changePage(0)} />\n        <div className='mainfeed__header__col-2'>\n          <div className='mainfeed__header__text'>Tweet</div>\n        </div>\n      </div>\n      <div className='tweet-expanded'>\n        {selectedTweet.userDetails ? (\n          <div>\n            <div className='tweet-expanded__row-1'>\n              <img\n                className='tweet__avatar'\n                src={`img/users/${selectedTweet.userDetails.photo}`}\n                alt={`${selectedTweet.userDetails.name}`}\n              />\n              <div className='tweet-expanded__row-1__col-2'>\n                <div\n                  className='tweet-expanded__row-1__col-2__name'\n                  onClick={() => props.fetchUser(selectedTweet.userDetails.id)}\n                >\n                  {selectedTweet.userDetails.name}\n                </div>\n                @{selectedTweet.userDetails.handle}\n              </div>\n            </div>\n            <div className='tweet-expanded__row-2'>\n              {selectedTweet.tweetDetails.textContent}\n            </div>\n            <div className='tweet-expanded__row-3'>\n              {selectedTweet.tweetDetails.dateAdded}\n            </div>\n            <div className='tweet-expanded__row-4'>\n              <strong>{likesNumber}</strong>\n              &nbsp;Likes\n            </div>\n            <div className='tweet-expanded__row-5'>\n              <TweetButton>\n                <TwitterReply height='24' />\n              </TweetButton>\n              <TweetButton>\n                <TwitterRetweet height='24' />\n              </TweetButton>\n              <span className='tweet__like-btn' onClick={likeHandler}>\n                <TweetButton>\n                  {isLiked ? (\n                    <TwitterLikeActive height='24' />\n                  ) : (\n                    <TwitterLike height='24' />\n                  )}\n                </TweetButton>\n              </span>\n              <TweetButton>\n                <TwitterShare height='24' />\n              </TweetButton>\n            </div>\n            <div className='tweet-expanded__reply'>\n              <div className='tweet-expanded__reply__col-1'>\n                <img\n                  className='tweet__avatar'\n                  src={`img/users/${props.currentUser.photo}`}\n                  alt={`${props.currentUser.name}`}\n                />\n              </div>\n              <div className='tweet-expanded__reply__col-2'>\n                <TextareaAutosize\n                  className='tweet__compose__input'\n                  placeholder='Tweet your reply'\n                  onChange={onChangeHandler}\n                  value={tweetText}\n                  maxLength='280'\n                />\n              </div>\n              <div className='tweet-expanded__reply__col-3 tweet-expanded__btn--right'>\n                <button\n                  className='tweet__compose--submit tweet-expanded__btn'\n                  type='submit'\n                  onClick={tweetSubmit}\n                >\n                  Reply\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <div className='mainfeed__divider' />\n      <div>\n        {!isLoaded ? (\n          <LoadingTile />\n        ) : (\n          replies.map((tweet) => {\n            return (\n              <div\n                className='tweet__hover-wrapper'\n                key={`${\n                  tweet.retweetChild ? tweet.retweetChild._id : tweet._id\n                }`}\n              >\n                {tweet.retweetChild ? (\n                  // RETWEET\n                  <div>\n                    <div className='retweet__header'>\n                      <SvgTwitterRetweet height='16' />\n                      {tweet.user.name} retweeted\n                    </div>\n                    <Tweet\n                      className='tweet'\n                      name={tweet.retweetChild.user.name}\n                      id={tweet.retweetChild.user._id}\n                      tweetId={tweet.retweetChild._id}\n                      parentTweetId={tweet._id}\n                      handle={`@${tweet.retweetChild.user.handle}`}\n                      profilePic={tweet.retweetChild.user.photo}\n                      time={tweet.retweetChild.tweetAge}\n                      message={tweet.retweetChild.textContent}\n                      replies={tweet.retweetChild.replies_short}\n                      retweets={tweet.retweetChild.retweets_short}\n                      likes={tweet.retweetChild.likes}\n                      fetchUser={props.fetchUser}\n                      changePage={props.changePage}\n                      currentUser={props.currentUser}\n                      deleteTweet={deleteTweet}\n                      likeTweet={props.likeTweet}\n                      retweetTweet={props.retweetTweet}\n                      fetchTweet={props.fetchTweet}\n                      tweetHandler={tweetHandler}\n                    />\n                  </div>\n                ) : (\n                  <Tweet\n                    className='tweet'\n                    name={tweet.user.name}\n                    id={tweet.user._id}\n                    tweetId={tweet._id}\n                    // ID needs to be converted to parent for request to work.\n                    parentTweetId={childToParent(tweet._id)} // <-------------------- In tweet expand, only the child tweet is visible.\n                    handle={`@${tweet.user.handle}`}\n                    profilePic={tweet.user.photo}\n                    time={tweet.tweetAge}\n                    message={tweet.textContent}\n                    replies={tweet.replies_short}\n                    retweets={tweet.retweets_short}\n                    likes={tweet.likes}\n                    fetchUser={props.fetchUser}\n                    changePage={props.changePage}\n                    currentUser={props.currentUser}\n                    deleteTweet={deleteTweet}\n                    likeTweet={props.likeTweet}\n                    retweetTweet={props.retweetTweet}\n                    fetchTweet={props.fetchTweet}\n                    tweetHandler={tweetHandler}\n                  />\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainFeedTweetExpand;\n","import SvgBackArrow from \"./../iconComponents/SvgBackArrow\";\nimport MessageTile from \"./MessageTile\";\n\nconst ErrorTile = (props) => {\n  return (\n    <div className='mainfeed'>\n      <div className='mainfeed__header'>\n        <SvgBackArrow height='22.5px' changePage={() => props.changePage(0)} />\n\n        <div className='mainfeed__header__col-2'>\n          <div className='mainfeed__header__text'>Error</div>\n        </div>\n      </div>\n      <MessageTile\n        heading={\"404: Page Not Found\"}\n        message='The resource you are looking for cannot be found.'\n      />\n    </div>\n  );\n};\n\nexport default ErrorTile;\n","import React from \"react\";\nimport MainFeedIndex from \"./MainFeedIndex\";\nimport MainFeedUser from \"./MainFeedUser\";\nimport MainFeedUserFollowing from \"./MainFeedUserFollowing\";\nimport MainFeedUserFollowers from \"./MainFeedUserFollowers\";\nimport MainFeedUserUpdate from \"./MainFeedUserUpdate\";\nimport MainFeedTweetExpand from \"./MainFeedTweetExpand\";\nimport ErrorTile from \"./ErrorTile\";\n\nconst MainFeed = (props) => {\n  switch (props.page) {\n    case 0:\n      // Main feed\n      return (\n        <MainFeedIndex\n          title='Home'\n          changePage={props.changePage}\n          currentUser={props.currentUser}\n          fetchUser={props.fetchUser}\n          isLoaded={props.isLoaded}\n          likeTweet={props.likeTweet}\n          retweetTweet={props.retweetTweet}\n          fetchTweet={props.fetchTweet}\n        />\n      );\n    case 1:\n      // Profile page\n      return (\n        <MainFeedUser\n          title='User'\n          changePage={props.changePage}\n          selectedUser={props.selectedUser}\n          currentUser={props.currentUser}\n          fetchUser={props.fetchUser}\n          isLoaded={props.isLoaded}\n          refreshCurrentUser={props.refreshCurrentUser}\n          refreshSelectedUser={props.refreshSelectedUser}\n          likeTweet={props.likeTweet}\n          retweetTweet={props.retweetTweet}\n          fetchTweet={props.fetchTweet}\n        />\n      );\n    case 2:\n      // SelectedUser following list\n      return (\n        <MainFeedUserFollowing\n          selectedUser={props.selectedUser}\n          changePage={props.changePage}\n          currentUser={props.currentUser}\n          fetchUser={props.fetchUser}\n          refreshCurrentUser={props.refreshCurrentUser}\n          refreshSelectedUser={props.refreshSelectedUser}\n        />\n      );\n    case 3:\n      // SelectedUser follower list\n      return (\n        <MainFeedUserFollowers\n          selectedUser={props.selectedUser}\n          changePage={props.changePage}\n          currentUser={props.currentUser}\n          fetchUser={props.fetchUser}\n          refreshCurrentUser={props.refreshCurrentUser}\n          refreshSelectedUser={props.refreshSelectedUser}\n        />\n      );\n    case 4:\n      // Profile user update\n      return (\n        <MainFeedUserUpdate\n          title='Update'\n          changePage={props.changePage}\n          currentUser={props.currentUser}\n          refreshCurrentUser={props.refreshCurrentUser}\n          refreshSelectedUser={props.refreshSelectedUser}\n        />\n      );\n    case 5:\n      // Tweet expand\n      return (\n        <MainFeedTweetExpand\n          changePage={props.changePage}\n          selectedTweet={props.selectedTweet}\n          currentUser={props.currentUser}\n          fetchUser={props.fetchUser}\n          likeTweet={props.likeTweet}\n          retweetTweet={props.retweetTweet}\n          fetchTweet={props.fetchTweet}\n          curUserRetweets={props.curUserRetweets}\n        />\n      );\n    default:\n      // 404\n      return <ErrorTile changePage={props.changePage} />;\n  }\n};\n\nexport default MainFeed;\n","const UserSideTile = (props) => {\n  // Status button\n  const status = (status) => {\n    if (status === \"current user\") return null;\n    else if (status === \"following\")\n      return (\n        <button\n          id='btn-follow'\n          className='btn btn--following  userSideTile__btn--following '\n          onClick={() => props.updateArray(props.user._id, \"not following\")}\n        ></button>\n      );\n    else\n      return (\n        <button\n          id='btn-follow'\n          className='btn btn--follow userSideTile__btn--follow'\n          onClick={() => props.updateArray(props.user._id, \"following\")}\n        >\n          Follow\n        </button>\n      );\n  };\n\n  const nameClickHandler = (e) => {\n    const btns = Array.from(document.querySelectorAll(\".btn\"));\n\n    // If a button is clicked, the user hasn't clicked a 'name': cancel the operation.\n    if (btns.includes(e.target)) return;\n    props.fetchUser(props.user._id);\n  };\n\n  return (\n    <div className='userSideTile' onClick={nameClickHandler}>\n      <div className='userSideTile__col-1'>\n        <img\n          className='tweet__avatar'\n          src={`img/users/${props.user.photo}`}\n          alt={`${props.user.name}`}\n        />\n      </div>\n      <div className='userSideTile__col-2'>\n        <div className='userSideTile__col-2__row-1'>\n          <div>\n            <div className='userSideTile__name' onClick={nameClickHandler}>\n              {props.user.name}\n            </div>\n            <div className='userSideTile__handle'>@{props.user.handle}</div>\n          </div>\n          {status(props.status)}\n        </div>\n        <div className='userSideTile__col-2__row-2'>{props.user.bio}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserSideTile;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport UserSideTile from \"./UserSideTile\";\nimport updateDatabase from \"./../utils/updateDatabase\";\n\nconst WhoToFollow = (props) => {\n  const [usersToFollow, setUsersToFollow] = useState([]);\n\n  useEffect(() => {\n    getNotFollowing();\n  }, []);\n\n  const getNotFollowing = async () => {\n    await axios.get(\"/api/v1/users/whoToFollow\").then((res) => {\n      const usersToFollowCopy = [...res.data.whoToFollow];\n      setUsersToFollow(usersToFollowCopy);\n    });\n  };\n\n  // Updates 'usersToFollow' array to include whether users are being followed by currentUser.\n  // Accepts a 'request' id to add to following list.\n  const updateArray = (id, request) => {\n    const usersToFollowCopy = [...usersToFollow];\n    const index = usersToFollowCopy.findIndex((user) => {\n      return user._id === id;\n    });\n    usersToFollowCopy[index].followStatus = request;\n\n    updateDatabase(id, request);\n    setUsersToFollow(usersToFollowCopy);\n  };\n\n  return (\n    <div className='who-to-follow'>\n      <div className='who-to-follow__header__text'>Who To Follow</div>\n      {usersToFollow.map((user) => {\n        return (\n          <UserSideTile\n            user={user}\n            status={user.followStatus}\n            updateArray={updateArray}\n            fetchUser={props.fetchUser}\n            key={user._id}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default WhoToFollow;\n","const Signature = () => {\n  return (\n    <div className='signature'>\n      <div>alvin.cousins@googlemail.com</div>\n      <div>\n        <strong className='signature__label'>Back-end:</strong>&nbsp;\n        <a\n          className='signature__link'\n          target='_blank'\n          rel='noreferrer'\n          href='https://github.com/ajcousins/odinbook'\n        >\n          github.com/ajcousins/odinbook\n        </a>\n      </div>\n      <div>\n        <strong className='signature__label'>Front-end:</strong>&nbsp;\n        <a\n          className='signature__link'\n          target='_blank'\n          rel='noreferrer'\n          href='https://github.com/ajcousins/odinbook-react'\n        >\n          github.com/ajcousins/odinbook-react\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Signature;\n","import React from \"react\";\nimport WhoToFollow from \"./WhoToFollow\";\nimport Signature from \"./Signature\";\n\nconst RightSideBar = (props) => {\n  return (\n    <div className='rightsidebar'>\n      <WhoToFollow fetchUser={props.fetchUser} />\n      <Signature />\n    </div>\n  );\n};\n\nexport default RightSideBar;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport SvgTwitterLogo from \"./../iconComponents/SvgTwitterLogo\";\nimport isEmail from \"validator/lib/isEmail\";\nimport isStrongPassword from \"validator/lib/isStrongPassword\";\n\nconst RegisterForm = (props) => {\n  const [input, setInput] = useState({});\n  const [isValid, setIsValid] = useState({\n    email: false,\n    name: false,\n    handle: false,\n    password: false,\n    passwordConfirm: false,\n  });\n  const [bioInput, setBioInput] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [photo, setPhoto] = useState(\"default.jpg\");\n\n  const changeHandler = (e) => {\n    let inputCopy = input;\n    inputCopy[e.target.name] = e.target.value;\n    setInput(inputCopy);\n    validateDetails();\n  };\n\n  const nextPage = () => {\n    setPage(page + 1);\n  };\n\n  const prevPage = () => {\n    setPage(page - 1);\n  };\n\n  const validateDetails = () => {\n    // TO DO\n    const isValidCopy = { ...isValid };\n\n    // Email address\n    if (input.email) {\n      isValidCopy.email = isEmail(input.email);\n    }\n\n    // Name\n    if (input.name) {\n      // Must be at least 3 chars long.\n      isValidCopy.name = input.name.length > 2;\n    }\n\n    // Name\n    if (input.handle) {\n      // Must be at least 3 chars long.\n      isValidCopy.handle = input.handle.length > 2;\n    }\n\n    // Password\n    if (input.password) {\n      // Must be minimum 8 chars\n      isValidCopy.password = isStrongPassword(input.password, {\n        minSymbols: 0,\n        minUppercase: 0,\n        minLowercase: 0,\n        minNumbers: 0,\n      });\n    }\n\n    // Confirmation\n    if (input.passwordConfirm) {\n      isValidCopy.passwordConfirm = input.passwordConfirm === input.password;\n    }\n\n    setIsValid(isValidCopy);\n  };\n\n  const createUser = (e) => {\n    e.preventDefault();\n\n    axios.post(\"/api/v1/users/signup\", input).then(\n      (res) => {\n        if (res.status === 201) {\n          nextPage();\n          setInput({});\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  };\n\n  const backgroundClickHandler = () => {\n    setIsValid({\n      email: false,\n      name: false,\n      handle: false,\n      password: false,\n      passwordConfirm: false,\n    });\n    setInput({});\n    setPage(0);\n    props.logOut();\n    props.clickHandler();\n  };\n\n  const validatePhoto = (e) => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append(\"photo\", document.getElementById(\"photo\").files[0]);\n\n    axios.post(\"/api/v1/users/updateUser\", form).then(\n      (res) => {\n        const photo = res.data.data.user.photo;\n        setPhoto(photo);\n        nextPage();\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  };\n\n  const bioChangeHandler = (e) => {\n    if (e.target.value.length > 160) return;\n    let bioInputCopy = bioInput;\n    bioInputCopy = e.target.value;\n    setBioInput(bioInputCopy);\n  };\n\n  const validateBio = (e) => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append(\"bio\", document.getElementById(\"bio\").value);\n\n    axios.post(\"/api/v1/users/updateUser\", form).then(\n      (res) => {\n        nextPage();\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  };\n\n  if (!props.formActive) return null;\n\n  switch (page) {\n    // Blank form\n    case 0:\n      return (\n        <div className='register__wrapper'>\n          <div\n            className='register__background'\n            onClick={backgroundClickHandler}\n          />\n          <form className='register__form'>\n            <div className='register__header'>\n              <SvgTwitterLogo height='29px' />\n            </div>\n            <h2 className='register__title'>Create your account</h2>\n\n            <input\n              name='email'\n              className={`login__input ${\n                !input.email || isValid.email ? null : \"login__invalid\"\n              }`}\n              onChange={changeHandler}\n              placeholder='Email'\n            />\n            <input\n              name='name'\n              className={`login__input ${\n                !input.name || isValid.name ? null : \"login__invalid\"\n              }`}\n              onChange={changeHandler}\n              placeholder='Full Name'\n            />\n            <input\n              name='handle'\n              className={`login__input ${\n                !input.handle || isValid.handle ? null : \"login__invalid\"\n              }`}\n              onChange={changeHandler}\n              placeholder='Handle'\n            />\n            <input\n              name='password'\n              className={`login__input ${\n                !input.password || isValid.password ? null : \"login__invalid\"\n              }`}\n              onChange={changeHandler}\n              placeholder='Password'\n              type='password'\n            />\n            <input\n              name='passwordConfirm'\n              className={`login__input ${\n                !input.passwordConfirm || isValid.passwordConfirm\n                  ? null\n                  : \"login__invalid\"\n              }`}\n              onChange={changeHandler}\n              placeholder='Confirm Password'\n              type='password'\n            />\n            <div className='btn__footer'>\n              {Object.values(isValid).every((item) => item === true) ? (\n                <button\n                  type='submit'\n                  className='btn--next'\n                  onClick={createUser}\n                >\n                  Next\n                </button>\n              ) : (\n                <button type='submit' className='btn--next btn--disable'>\n                  Next\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      );\n\n    // Upload photo\n    case 1:\n      return (\n        <div className='register__wrapper'>\n          <div\n            className='register__background'\n            onClick={backgroundClickHandler}\n          />\n          <form className='register__form'>\n            <div className='register__header'>\n              <SvgTwitterLogo height='29px' />\n            </div>\n            <h2 className='register__title'>Pick a profile picture</h2>\n            <p>Have a favourite selfie? Upload it now.</p>\n\n            <input\n              className='register__upload'\n              type='file'\n              accept='image/*'\n              id='photo'\n              name='photo'\n            />\n            <div className='btn__footer'>\n              <button className='btn--skip' onClick={nextPage}>\n                Skip for now\n              </button>\n              <button\n                type='submit'\n                className='btn--next'\n                onClick={validatePhoto}\n              >\n                Next\n              </button>\n            </div>\n          </form>\n        </div>\n      );\n\n    // Check photo\n    case 2:\n      return (\n        <div className='register__wrapper'>\n          <div\n            className='register__background'\n            onClick={backgroundClickHandler}\n          />\n          <div className='register__form'>\n            <div className='register__header'>\n              <SvgTwitterLogo height='29px' />\n            </div>\n            <h2 className='register__title'>Looking good!</h2>\n            <p>Not happy with your photo? If not, go back and reupload.</p>\n\n            <div className='register__avatar-wrapper'>\n              <img\n                className='register__avatar-preview'\n                src={`img/users/${photo}`}\n                alt='user'\n              />\n            </div>\n            <div className='btn__footer'>\n              <button className='btn--skip' onClick={prevPage}>\n                Go back\n              </button>\n              <button type='submit' className='btn--next' onClick={nextPage}>\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n\n    // Upload photo\n    case 3:\n      return (\n        <div className='register__wrapper'>\n          <div\n            className='register__background'\n            onClick={backgroundClickHandler}\n          />\n          <div className='register__form'>\n            <div className='register__header'>\n              <SvgTwitterLogo height='29px' />\n            </div>\n            <h2 className='register__title'>Describe yourself</h2>\n            <p>\n              What makes you special? Don't think too hard, just have fun with\n              it.\n            </p>\n\n            <textarea\n              className='bioInput'\n              onChange={bioChangeHandler}\n              value={bioInput}\n              id='bio'\n            />\n            <div className='register__bio-counter'>{bioInput.length}/160</div>\n            <div className='btn__footer'>\n              <button className='btn--skip' onClick={nextPage}>\n                Skip for now\n              </button>\n              <form>\n                <button\n                  type='submit'\n                  className='btn--next'\n                  onClick={validateBio}\n                >\n                  Next\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      );\n\n    // Form submission successful\n    case 4:\n      return (\n        <div className='register__wrapper'>\n          <div\n            className='register__background'\n            onClick={backgroundClickHandler}\n          />\n          <div className='register__form'>\n            <div className='register__success-page'>\n              <div className='register__spacer' />\n              <SvgTwitterLogo\n                height='44px'\n                className='register__logo__success'\n              />\n              <h2 className='register__title'>Success!</h2>\n              <p style={{ whiteSpace: \"pre-wrap\", textAlign: \"center\" }}>\n                Get the most out of Twittr by staying up to date with {\"\\n\"}\n                what's happening.\n              </p>\n            </div>\n            <div className='btn__footer'>\n              <button\n                className='btn--next'\n                onClick={() => {\n                  props.clickHandler();\n                  setPage(0);\n                }}\n              >\n                Go to login!\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport SvgTwitterLogo from \"./../iconComponents/SvgTwitterLogo\";\nimport RegisterForm from \"./RegisterForm\";\n\nconst Login = (props) => {\n  const [input, setInput] = useState({});\n  const [token, setToken] = useState(\"\");\n  const [formActive, setFormActive] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const changeHandler = (e) => {\n    let inputCopy = input;\n    inputCopy[e.target.name] = e.target.value;\n    setInput(inputCopy);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    login();\n  };\n\n  const login = async () => {\n    axios\n      .post(\"/api/v1/users/login\", input)\n      .then((res) => {\n        const data = res.data;\n        setToken(data.token);\n        props.tokenHandler(token);\n      })\n      .catch((err) => {\n        console.log(err);\n        setErrorMessage(\n          \"The username and password you entered did not match our records. Please double-check and try again.\"\n        );\n      });\n  };\n\n  const clickHandler = () => {\n    if (formActive) setFormActive(false);\n    else setFormActive(true);\n  };\n\n  return (\n    <div className='wrapper-login'>\n      <RegisterForm\n        formActive={formActive}\n        clickHandler={clickHandler}\n        logOut={props.logOut}\n      />\n      <form className='login'>\n        <SvgTwitterLogo height='40px' />\n        <h1 className='login__title'>Log in to Twittr</h1>\n        {errorMessage ? (\n          <div className='login__error-message'>{errorMessage}</div>\n        ) : null}\n\n        <input\n          id='email'\n          name='email'\n          className='login__input'\n          type='text'\n          placeholder='Email'\n          onChange={changeHandler}\n        />\n        <input\n          id='password'\n          name='password'\n          className='login__input'\n          type='password'\n          placeholder='Password'\n          onChange={changeHandler}\n        />\n        <button type='submit' onClick={submitHandler}>\n          Log in\n        </button>\n        <div className='login__footer'>\n          <button className='link-btn' onClick={clickHandler}>\n            Sign up for Twittr\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport MenuPopUp from \"./components/MenuPopUp\";\nimport LeftSideBar from \"./components/LeftSideBar\";\nimport MainFeed from \"./components/MainFeed\";\nimport RightSideBar from \"./components/RightSideBar\";\nimport axios from \"axios\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  const [header, setHeader] = useState({});\n  const [isAuth, setIsAuth] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectedUser, setSelectedUser] = useState({});\n  const [selectedTweet, setSelectedTweet] = useState({});\n  const [curUserLikes, setCurUserLikes] = useState([]);\n  const [curUserRetweets, setCurUserRetweets] = useState([]);\n  const [menuVis, setMenuVis] = useState(false);\n  const [page, setPage] = useState(0);\n\n  const tokenHandler = (token) => {\n    let tokenCopy = token;\n    setHeader({ Authorization: `Bearer ${tokenCopy}` });\n    setIsAuth(true);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\n          \"https://hydro-eds-18702.herokuapp.com/tweets/\",\n          {\n            method: \"GET\",\n          }\n        );\n        const data = await response.json();\n        if (\n          data.status === \"fail\" ||\n          data.status === \"error\" ||\n          data.status === null\n        )\n          setIsAuth(false);\n        else {\n          setIsAuth(true);\n          setIsLoaded(true);\n          const currentUserCopy = { ...data.data.currentUser };\n          const curUserLikesCopy = [...data.data.currentUser.likedTweets];\n          const curUserRetweetsCopy = [\n            ...data.data.currentUser.retweetedTweets,\n          ];\n\n          setCurrentUser(currentUserCopy);\n          setCurUserLikes(curUserLikesCopy);\n          setCurUserRetweets(curUserRetweetsCopy);\n        }\n      } catch (err) {\n        console.log(err);\n        setIsAuth(false);\n      }\n    }\n    fetchData();\n  }, [isAuth]);\n\n  const refreshCurrentUser = async () => {\n    await axios\n      .get(\"https://hydro-eds-18702.herokuapp.com/api/v1/users/current\")\n      .then((res) => {\n        const currentUserCopy = { ...res.data.data.currentUser };\n        setCurrentUser(currentUserCopy);\n\n        const curUserRetweetsCopy = currentUserCopy.retweetedTweets;\n        setCurUserRetweets(curUserRetweetsCopy);\n      });\n  };\n\n  const refreshSelectedUser = async () => {\n    if (!selectedUser._id) return;\n    await axios\n      .get(\n        `https://hydro-eds-18702.herokuapp.com/api/v1/users/${selectedUser._id}`\n      )\n      .then((res) => {\n        const selectedUserCopy = { ...res.data.data.user };\n        setSelectedUser(selectedUserCopy);\n        // console.log(\"selectedUser refreshed\");\n      });\n  };\n\n  const fetchUser = (id) => {\n    axios\n      .get(`https://hydro-eds-18702.herokuapp.com/api/v1/users/${id}`)\n      .then((res) => {\n        setSelectedUser(res.data.data.user);\n      });\n    changePage(1);\n  };\n\n  const fetchTweet = (tweetId) => {\n    const selectedTweetCopy = { ...selectedTweet };\n\n    axios\n      .get(`https://hydro-eds-18702.herokuapp.com/api/v1/tweets/${tweetId}`)\n      .then((res) => {\n        const tweetDetails = {\n          tweetId: res.data.data.tweet._id,\n          textContent: res.data.data.tweet.textContent,\n          dateAdded: res.data.data.tweet.dateAdded_expand,\n          likes: res.data.data.tweet.likes,\n          likesQty: res.data.data.tweet.likes.length,\n        };\n\n        // Get user details associated to tweet.\n        axios\n          .get(\n            `https://hydro-eds-18702.herokuapp.com/api/v1/users/${res.data.data.tweet.user}`\n          )\n          .then((res) => {\n            const userDetails = {\n              name: res.data.data.user.name,\n              handle: res.data.data.user.handle,\n              photo: res.data.data.user.photo,\n              id: res.data.data.user._id,\n            };\n\n            selectedTweetCopy.tweetDetails = tweetDetails;\n            selectedTweetCopy.userDetails = userDetails;\n\n            setSelectedTweet(selectedTweetCopy);\n          });\n      });\n\n    changePage(5);\n  };\n\n  const menuHandler = () => {\n    if (menuVis) setMenuVis(false);\n    else setMenuVis(true);\n  };\n\n  const logOut = async () => {\n    try {\n      await fetch(\"https://hydro-eds-18702.herokuapp.com/api/v1/users/logout\", {\n        method: \"GET\",\n      });\n      setHeader({});\n      setIsAuth(false);\n      setIsLoaded(false);\n      setCurrentUser({});\n      setSelectedUser({});\n      setCurUserLikes([]);\n      setMenuVis(false);\n      setPage(0);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const changePage = (page) => {\n    if (page === 0) {\n      setSelectedUser({});\n      setSelectedTweet({});\n    }\n    setPage(page);\n  };\n\n  const likeTweet = (tweetId, add) => {\n    // If second attribute is true-- add to array. If false, remove from array.\n    const curUserLikesCopy = [...curUserLikes];\n\n    if (add) {\n      axios\n        .patch(\n          `https://hydro-eds-18702.herokuapp.com/api/v1/tweets/${tweetId}/like`\n        )\n        .then((res) => {\n          curUserLikesCopy.push(tweetId);\n          setCurUserLikes(curUserLikesCopy);\n        });\n    } else {\n      axios\n        .patch(\n          `https://hydro-eds-18702.herokuapp.com/api/v1/tweets/${tweetId}/unlike`\n        )\n        .then((res) => {\n          // Remove tweet from array.\n          const index = curUserLikesCopy.findIndex(\n            (tweet) => tweet === tweetId\n          );\n          curUserLikesCopy.splice(index, 1);\n          setCurUserLikes(curUserLikesCopy);\n        });\n    }\n  };\n\n  const retweetTweet = (tweetId, add) => {\n    if (add) {\n      axios({\n        method: \"POST\",\n        url: \"https://hydro-eds-18702.herokuapp.com/api/v1/tweets/\",\n        data: {\n          user: currentUser._id,\n          retweetChild: tweetId,\n        },\n      }).then((res) => {\n        refreshCurrentUser();\n        refreshSelectedUser();\n      });\n    } else {\n      // tweetId needs to be parent ID.\n      // Delete parent tweet.\n      axios({\n        method: \"POST\",\n        url: \"https://hydro-eds-18702.herokuapp.com/api/v1/tweets/undoRetweet\",\n        data: {\n          retweetParent: tweetId,\n        },\n      }).then((res) => {\n        refreshCurrentUser();\n        refreshSelectedUser();\n      });\n    }\n  };\n\n  if (!isAuth) {\n    // Login/ register screen\n    return (\n      <div className='App'>\n        <Login tokenHandler={tokenHandler} logOut={logOut} />\n      </div>\n    );\n  } else {\n    // Main screen\n    return (\n      <div className='App'>\n        <div className='wrapper-main'>\n          <MenuPopUp\n            menuVis={menuVis}\n            menuHandler={menuHandler}\n            logOut={logOut}\n            currentUser={currentUser}\n          />\n          <LeftSideBar\n            menu={menuHandler}\n            currentUser={currentUser}\n            changePage={changePage}\n            fetchUser={fetchUser}\n          />\n          <MainFeed\n            header={header}\n            currentUser={currentUser}\n            selectedUser={selectedUser}\n            page={page}\n            changePage={changePage}\n            fetchUser={fetchUser}\n            isLoaded={isLoaded}\n            refreshCurrentUser={refreshCurrentUser}\n            refreshSelectedUser={refreshSelectedUser}\n            likeTweet={likeTweet}\n            retweetTweet={retweetTweet}\n            fetchTweet={fetchTweet}\n            selectedTweet={selectedTweet}\n            curUserRetweets={curUserRetweets}\n          />\n          <RightSideBar fetchUser={fetchUser} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}